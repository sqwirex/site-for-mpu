# .github/workflows/deploy.yml
name: Deploy Wordly Bot

on:
  push:
    branches: [ main ]
    paths:
      - 'telegram-wordly-bot/**'
      - 'Dockerfile'
      - '.github/workflows/deploy.yml'
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Deploy to VPS via SSH
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.VPS_PORT }}
          script: |
            set -xe

            # Абсолютный путь к корню репо на VPS
            DEPLOY_DIR=/home/${{ secrets.VPS_USER }}/site-for-mpu
            cd $DEPLOY_DIR

            echo "=== Git: checkout main ==="
            git fetch origin main
            git checkout main

            echo "=== Git: commit & push VM-side changes ==="
            if [ -n "$(git status --porcelain)" ]; then
              git add telegram-wordly-bot/base_words.json
              git commit -m "ci: sync wordlist from VM @ $(date -u +'%Y-%m-%dT%H:%M:%SZ')"
              git push origin main
            else
              echo "No VM-side changes to commit."
            fi

            echo "=== Git: pull & rebase ==="
            git fetch origin main
            git rebase origin/main

            echo "=== Docker: build image ==="
            docker build -t wordly-bot .

            echo "=== Docker: stop & remove old container ==="
            docker rm -f wordly-bot || true

            echo "=== Docker: run new container ==="
            docker run -d \
              --name wordly-bot \
              --restart unless-stopped \
              -v $DEPLOY_DIR/telegram-wordly-bot:/app/telegram-wordly-bot \
              --env-file $DEPLOY_DIR/telegram-wordly-bot/.env \
              wordly-bot

            echo "=== Docker: prune dangling images ==="
            docker image prune -f

            echo "✅ Bot deployed successfully"
